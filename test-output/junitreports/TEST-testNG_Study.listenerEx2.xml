<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="hp" failures="1" tests="4" name="testNG_Study.listenerEx2" time="0.008" errors="0" timestamp="2024-01-03T03:09:56 IST" skipped="1">
  <testcase classname="testNG_Study.listenerEx2" name="e" time="0.002">
    <system-out>
      <![CDATA[TC e is Execution is started
e is running 
TC e Completed successfully]]>
    </system-out>
  </testcase> <!-- e -->
  <testcase classname="testNG_Study.listenerEx2" name="g" time="0.000">
    <skipped/>
    <system-out>
      <![CDATA[TC g is skipped Please check Dependance method]]>
    </system-out>
  </testcase> <!-- g -->
  <testcase classname="testNG_Study.listenerEx2" name="h" time="0.002">
    <system-out>
      <![CDATA[TC h is Execution is started
h is running 
TC h Completed successfully]]>
    </system-out>
  </testcase> <!-- h -->
  <testcase classname="testNG_Study.listenerEx2" name="f" time="0.004">
    <failure message="null" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.fail(Assert.java:116)
at testNG_Study.listenerEx2.f(listenerEx2.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
    <system-out>
      <![CDATA[TC f is Execution is started
TC f is Failed please check Again]]>
    </system-out>
  </testcase> <!-- f -->
  <system-out>
    <![CDATA[TC b is Execution is started
TC b is Failed please check Again
TC d is Execution is started
D is running 
TC d Completed successfully
TC a is Execution is started
A is running 
TC a Completed successfully
TC c is Execution is started
TC c is skipped Please check Dependance method
TC e is Execution is started
e is running 
TC e Completed successfully
TC f is Execution is started
TC f is Failed please check Again
TC h is Execution is started
h is running 
TC h Completed successfully
TC g is Execution is started
TC g is skipped Please check Dependance method]]>
  </system-out>
</testsuite> <!-- testNG_Study.listenerEx2 -->
